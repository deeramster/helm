---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
    {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: sausage-store
        env: "{{ .Values.environment }}"
    spec:
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: backend-secrets-{{ .Release.Name }}
                  key: spring-datasource-url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets-{{ .Release.Name }}
                  key: postgres-user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets-{{ .Release.Name }}
                  key: postgres-password
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: backend-secrets-{{ .Release.Name }}
                  key: mongo-user
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets-{{ .Release.Name }}
                  key: mongo-password
            - name: MONGO_HOST
              valueFrom:
                secretKeyRef:
                  name: backend-secrets-{{ .Release.Name }}
                  key: mongo-host
            - name: MONGO_DBNAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets-{{ .Release.Name }}
                  key: mongo-dbname
            - name: REPORT_PATH
              value: "/var/www-data/htdocs"
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}